from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, ContentType, InputMediaVideo, FSInputFile
from aiogram.fsm.context import FSMContext
from dotenv import load_dotenv

from forecast_bot.states.user_states import AffiliateState
from forecast_bot.keyboards import user_kbs
from forecast_bot.init_bot import bot
from config import admin_username

import os


load_dotenv()

router = Router()


@router.message(Command('free'))
async def affilate_handler(message: Message):
    await message.answer_photo(FSInputFile('images/affilate.jpg'), caption=f'<b>–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–∞—Ç—å, –Ω–æ —É —Ç–µ–±—è –Ω–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç, —Ç–æ –º—ã –º–æ–∂–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å.\n\n–£ –Ω–∞—Å –µ—Å—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –≥–¥–µ –≤—Å–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ ‚Äì —Ç—ã –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—à—å –≤–∏–¥–µ–æ, –º—ã –ø–ª–∞—Ç–∏–º —Ç–µ–±–µ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã.\n\n–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏:\n5.000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Äì 100$\n20.000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Äì 500$\n100.000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Äì 3 000$\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Å TikTok –∏ YouTube (–º–æ–∂–µ–º –æ–±–≥–æ–≤–æ—Ä–∏—Ç—å –≤–∞—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã–µ –∏–º–µ—é—Ç—Å—è).\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º ‚Äì @{admin_username}\n\n–£–¥–∞—á–∏!</b>',
                            reply_markup=user_kbs.affilate_bio_kb)


@router.callback_query(F.data == 'affilate_earning')
async def affilate_earning_handler(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    
    await callback.message.edit_caption(caption='<b>–û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–∏—à–∏ –Ω–∞–º, –∫–∞–∫ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –∑–∞–∑—ã–≤–∞—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—é –≤ –±–æ—Ç–∞. \n–ß–µ–º –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–µ–º –ª—É—á—à–µ\n\n<blockquote>–ü—Ä–∏–º–µ—Ä: ¬´–Ø –ò–≤–∞–Ω, –∑–∞–Ω–∏–º–∞—é—Å—å –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–æ–≤, —Å–Ω–∏–º–∞—é –≤ –¢–∏–∫Tok ‚Äì https://—Å—Å—ã–ª–∫–∞-–Ω–∞-—Ç–∏–∫—Ç–æ–∫, –∏ –ø–ª–∞–Ω–∏—Ä—É—é –Ω–∞—á–∞—Ç—å —Å–Ω–∏–º–∞—Ç—å –Ω–∞ YouTube¬ª</blockquote>\n\n–ï—Å–ª–∏ —Ç—ã —Ä–∞–Ω–µ–µ –Ω–µ –∑–∞–Ω–∏–º–∞–ª—Å—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–æ–≤, –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏, \n–≥–¥–µ –∏ –∫–∞–∫–∏–µ –±—É–¥–µ—à—å –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ üòâ</b>',
                                    reply_markup=user_kbs.affilate_back_kb)
    
    await state.set_state(AffiliateState.user_info)


@router.callback_query(F.data == 'affilate_back')
async def affilate_back_handler(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_caption(caption=f'<b>–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–∞—Ç—å, –Ω–æ —É —Ç–µ–±—è –Ω–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç, —Ç–æ –º—ã –º–æ–∂–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å.\n\n–£ –Ω–∞—Å –µ—Å—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –≥–¥–µ –≤—Å–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ ‚Äì —Ç—ã –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—à—å –≤–∏–¥–µ–æ, –º—ã –ø–ª–∞—Ç–∏–º —Ç–µ–±–µ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã.\n\n–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏:\n5.000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Äì 100$\n20.000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Äì 500$\n100.000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ ‚Äì 3 000$\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Å TikTok –∏ YouTube (–º–æ–∂–µ–º –æ–±–≥–æ–≤–æ—Ä–∏—Ç—å –≤–∞—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã–µ –∏–º–µ—é—Ç—Å—è).\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º ‚Äì @{admin_username}\n\n–£–¥–∞—á–∏!</b>',
                            reply_markup=user_kbs.affilate_bio_kb)
    await state.clear()

@router.message(AffiliateState.user_info)
async def user_info_handler(message: Message, state: FSMContext):
    if message.content_type != ContentType.TEXT:
        await message.answer('<b>–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–∏—Ç—å –∫ —Ç–µ–∫—Å—Ç—É —á—Ç–æ-—Ç–æ –µ—â–µ, –ø–∏—à–∏—Ç–µ - </b>')
        return

    await bot.send_message(os.getenv('ADMIN_ID'), f'–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–µ–Ω—Ä—Å—Ç–≤–æ –æ—Ç {message.from_user.id}\nUsername: @{message.from_user.username}\n\n{message.text}', parse_mode=None)
    
    await message.answer(f'<b>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞—è–≤–∫—É. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å –Ω–∞—à–∏–º —Ä–æ–±–æ—Ç–æ–º –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞/–≤—ã–ø–ª–∞—Ç—ã - @{admin_username}</b>',
                            reply_markup=user_kbs.affilate_videos_kb)
    await state.clear()


@router.callback_query(F.data == 'affilate_videos')
async def affilate_videos_handler(callback: CallbackQuery):
    await callback.answer()
    
    download_message = await callback.message.answer('<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>')
    try:
        await callback.message.delete()
    except:
        pass
    
    media = [
        InputMediaVideo(media=FSInputFile('videos/video_1.mp4'), caption=f'<b>–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏, –º–æ–∂–µ—Ç–µ –æ–±–≥–æ–≤–æ—Ä–∏—Ç—å –∏—Ö —Å @{admin_username}</b>'),
        InputMediaVideo(media=FSInputFile('videos/video_2.mp4')),
        InputMediaVideo(media=FSInputFile('videos/video_3.mp4')),
    ]
    
    await callback.message.answer_media_group(media)
    await download_message.delete()